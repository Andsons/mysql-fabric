                      Information for developers
                      ==========================

Adding new commands
-------------------

One needs to inherits from either the Command or ProcedureCommand class
to define a new command.

In the former case, the command does not trigger any internal procedure and
can be either local or remote. For example, the commands "start" and "stop"
are defined upon the Command class where the "start" is local and "stop" is
remote.

Any command defined upon the ProcedureCommand class is remote and triggers
a procedure which is scheduled through an internal event processing system.
The "promote" and "demote" are examples of remote commands built upon the
ProcedureCommand class.

Running unit tests
------------------

In order to run tests while developing, it is often best to install all
the necessary dependencies in the build directory and execute from
there. Connector/Python is one of the dependencies and having it in the
build directory will avoid conflicts on the "mysql" package location.

So something similar to this would install Connector/Python with the
version of your choice into the build directory and allow you to run
the unit tests:

      python setup.py build

      fabricdir=`pwd`
      (
        cd <connector-directory>
        python setup.py build --build-base=${fabricdir}/build
        cp version.py ${fabricdir}/build/lib*/mysql/connector/.
      )

      python test.py --build-dir=${fabricdir}/build/lib --host=<host> \
      --port=<port> --user=<user> --password=<password> \
      --servers="<servers' addresses>"

Note that the "lib" directory name varies depending on the platform.

Running commands
----------------

If you have built all the files you can execute a command by resetting
the Python path. There is also a sample configuration file, so you can
use the following command to start the MySQL Fabric node un-daemonized
and print debug log messages to the terminal.

    export PYTHONPATH=build/lib
    export PATH=build/script:$PATH
    fabric manage start --config=data/main.cfg --ignore-site-config

You can stop the MySQL Fabric using:

    export PYTHONPATH=build/lib
    export PATH=build/script:$PATH
    fabric manage stop --config=data/main.cfg --ignore-site-config

The port used for these commands is stored in the configuration file.

Note that the "lib" directory name and the "script" directory name
vary depending on the platform.
